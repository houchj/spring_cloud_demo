
#user  nobody;
worker_processes  1;

#开发环境
error_log  logs/error.log  debug;
#生产环境
#error_log  logs/error.log;

pid     logs/nginx.pid;


events {
  worker_connections  1024;
  accept_mutex on;  # 各个worker 通过锁来获取新连接
}


http {

  # 先定义日志格式，format_main 是日志格式的名字
  log_format  format_main  '$remote_addr - $remote_user [$time_local] $request - '
  ' $status - $body_bytes_sent [$http_referer] '
  '[$http_user_agent] [$http_x_forwarded_for]';

  # 配置访问日志格式、文件
  access_log  logs/access_main.log  format_main;

  default_type  'text/html';
  sendfile        on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout  65;

  #gzip  on;

  #指定缓存信息
  lua_shared_dict ngx_cache 128m;
  #保证只有一个线程去访问redis或是mysql-lock for cache
  lua_shared_dict cache_lock 100k;
  #lua扩展加载

  # for linux
  # lua_package_path "/usr/local/openresty/lualib/?.lua;;";
  # lua_package_cpath "/usr/local/openresty/lualib/?.so;;";


  # for windows
  lua_package_path "C:/dev/refer/LuaDemoProject/src/vendor/jwt/?.lua;C:/dev/refer/LuaDemoProject/src/?.lua;E:/tool/ZeroBraneStudio-1.80/lualibs/?/?.lua;E:/tool/ZeroBraneStudio-1.80/lualibs/?.lua;E:/tool/openresty-1.13.6.2-win32/lualib/?.lua;;";
  lua_package_cpath "E:/tool/ZeroBraneStudio-1.80/bin/clibs/?.dll;E:/tool/openresty-1.13.6.2-win32/lualib/?.dll;;";


  # 初始化项目
  init_by_lua_file luaScript/initial/loading_config.lua;

  #调试模式（即关闭lua脚本缓存)
  lua_code_cache off;
  upstream zuul {
    server  192.168.56.121:9073;
  }

  #后台管理服务器 demo
  server {
    listen       80;
    server_name  admin.crazydemo.com;
    root /var/www/;

    location / {
      default_type 'text/html';
      charset utf-8;
      echo "this is admin server";
    }

    # 设置错误页面
    error_page  404  /404.html;

    # 设置错误页面
    error_page   500 502 503 504  /50x.html;
  }

  #文件管理服务器 demo
  server {
    listen       80;
    server_name  file.crazydemo.com;
    location / {
      default_type 'text/html';
      charset utf-8;
      echo "this is file server";
    }
  }

  #默认服务器 demo
  server {
    listen       80;
    server_name  crazydemo.com  *.crazydemo.com;

    default_type 'text/html';
    charset utf-8;
    root /var/www/;
    #charset koi8-r;


    #access_log  logs/access.log  format_main;

    location / {
      default_type 'text/html';
      charset utf-8;
      echo "this is defalut server";
    }

    #拒绝全部
    location = /denyall-demo {
      deny all;
    }

    #允许192.168.0.0/24网段和127.0.0.1的请求，其他来源IP全部拒绝。
    location = /allow-demo {
      allow 192.168.0.0/24;
      allow 127.0.0.1;
      deny  all;
      echo "you are ok";
    }


    #satisfy指令进行协调
    location = /satisfy-demo {
      satisfy any;
      access_by_lua "ngx.exit(ngx.OK)";
      deny  all;
      echo "you are ok";
    }

    location = /try_files-demo {
      try_files /foo /bar /last;

    }
    location /last {
      echo "uri: $uri ";
    }


    location /download/ {
      rewrite ^/download/(.*)/video/(.*)$ /view/$1/mp3/$2.mp3 last;
      rewrite ^/download/(.*)/audio/(.*)*$  /view/$1/mp3/$2.rmvb  last;
      return  404;
    }

    location /view {
      echo " view : $uri ";
    }


    location /download_break/ {
      rewrite ^/download_break/(.*)/video/(.*)$ /view/$1/mp3/$2.mp3 break;
      rewrite ^/download_break/(.*)/audio/(.*)*$  /view/$1/mp3/$2.rmvb  break;
      echo " download_break new uri : $uri ";
    }

     #rewrite 指令 redirect 参数演示
    location /download_redirect/ {
      rewrite ^/download_redirect/(.*)/video/(.*)$ /view/$1/mp3/$2.mp3 redirect;
      rewrite ^/download_redirect/(.*)/audio/(.*)*$  /view/$1/mp3/$2.rmvb  redirect;
      return  404;
    }

    #rewrite 指令 permanent 参数演示
    location /download_permanent/ {
      rewrite ^/download_permanent/(.*)/video/(.*)$ /view/$1/mp3/$2.mp3 permanent;
      rewrite ^/download_permanent/(.*)/audio/(.*)*$  /view/$1/mp3/$2.rmvb  permanent;
      return  404;
    }



    location /capture_demo {
      rewrite ^/capture_demo/(.*)/video/(.*)$ /view/$1/mp3/$2.mp3 break;
      rewrite ^/capture_demo/(.*)/audio/(.*)*$  /view/$1/mp3/$2.rmvb  break;
      echo " 捕获组1 : $1  ; 捕获组2 : $2 ";
    }


    #if 指令的演示程序
    location /if_demo {
      if ($http_user_agent ~* "Firefox") {             #$匹配firefox浏览器
        return 403;
      }
      if ($http_user_agent ~* "Chrome") {              #匹配chrome谷歌浏览器
        return 301;
      }
      if ($http_user_agent ~* "iphone") {              #匹配iphone手机
        return 302;
      }
      if ($http_user_agent ~* "android") {             #匹配安卓手机
        return 404;
      }
      return 405;                #其它浏览器默认访问规则
    }


    location /sequence_demo_1 {
      set $a foo;
      echo $a;

      set $a bar;
      echo $a;
    }


  }

}


#user  nobody;
worker_processes  1;

#开发环境
error_log  logs/error.log  debug;
#生产环境
#error_log  logs/error.log;


pid     logs/nginx.pid;


events {
  worker_connections  1024;
}


http {
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  logs/access_main.log  main;

  sendfile        on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout  65;

  #gzip  on;

  #指定缓存信息
  lua_shared_dict ngx_cache 128m;
  #保证只有一个线程去访问redis或是mysql-lock for cache
  lua_shared_dict cache_lock 100k;
  #lua扩展加载

  # for linux
  # lua_package_path "/usr/local/openresty/lualib/?.lua;;";
  # lua_package_cpath "/usr/local/openresty/lualib/?.so;;";


  # for windows
 lua_package_path "C:/dev/refer/LuaDemoProject/src/vendor/jwt/?.lua;C:/dev/refer/LuaDemoProject/src/?.lua;E:/tool/ZeroBraneStudio-1.80/lualibs/?/?.lua;E:/tool/ZeroBraneStudio-1.80/lualibs/?.lua;E:/tool/openresty-1.13.6.2-win32/lualib/?.lua;;";
 lua_package_cpath "E:/tool/ZeroBraneStudio-1.80/bin/clibs/?.dll;E:/tool/openresty-1.13.6.2-win32/lualib/?.dll;;";


  # 初始化项目
  init_by_lua_file luaScript/initial/loading_config.lua;

  #调试模式（即关闭lua脚本缓存)
  lua_code_cache off;

  upstream zuul {
    server  192.168.56.121:9073;
  }


  server {
    listen       80;


    server_name  localhost;


    location / {
      root   html;
      index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }

    #测试lua是否可以执行
    location  /lua {
      default_type 'text/html';
      content_by_lua 'ngx.say("Hello, Lua!")';
    }

    location /test {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/test.lua;
    }
    #第一个lua脚本 hellword
    location /helloworld {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/module/demo/helloworld.lua;
    }

    #数据类型 面向对象基础
    location /demo {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/module/demo/showBasicDemo.lua;
    }
    #点击次数统计的演示
    location /visitcount {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/module/demo/redisVisitCount.lua;
    }

    #秒杀的演示地址
    location /seckill/v1 {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/module/seckill/seckilling.lua;
    }
    #秒杀的演示地址
    location /seckill/v2 {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/module/seckill/outerSeckilling.lua;
    }
    #秒杀的演示地址
    location /seckill/v3 {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/module/seckill/seckillingByEvalScriptMq.lua;
    }

    #redis 的计数器限流的演示地址
    location /redisLimitCounter {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/module/demo/redisLimitCounterDemo.lua;
    }



    #微服务的统一网关
    location ^~/zuul/ {
      internal;
      proxy_pass http://zuul;
      proxy_set_header  Host $host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-NginX-Proxy true;
      rewrite ^/zuul/(.*)$ /$1 break;
      proxy_connect_timeout 500s;
      proxy_read_timeout 500s;
      proxy_send_timeout 500s;
    }


    location /nginx/status {
      stub_status on;
      access_log on;
      auth_basic "Nginx Status";
      #auth_basic_user_file conf/htpasswd;
    }


}
}
